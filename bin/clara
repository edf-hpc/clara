#!/usr/bin/env python
# -*- coding: utf-8 -*-
##############################################################################
#  Copyright (C) 2014-2016 EDF SA                                            #
#                                                                            #
#  This file is part of Clara                                                #
#                                                                            #
#  This software is governed by the CeCILL-C license under French law and    #
#  abiding by the rules of distribution of free software. You can use,       #
#  modify and/ or redistribute the software under the terms of the CeCILL-C  #
#  license as circulated by CEA, CNRS and INRIA at the following URL         #
#  "http://www.cecill.info".                                                 #
#                                                                            #
#  As a counterpart to the access to the source code and rights to copy,     #
#  modify and redistribute granted by the license, users are provided only   #
#  with a limited warranty and the software's author, the holder of the      #
#  economic rights, and the successive licensors have only limited           #
#  liability.                                                                #
#                                                                            #
#  In this respect, the user's attention is drawn to the risks associated    #
#  with loading, using, modifying and/or developing or reproducing the       #
#  software by the user in light of its specific status of free software,    #
#  that may mean that it is complicated to manipulate, and that also         #
#  therefore means that it is reserved for developers and experienced        #
#  professionals having in-depth computer knowledge. Users are therefore     #
#  encouraged to load and test the software's suitability as regards their   #
#  requirements in conditions enabling the security of their systems and/or  #
#  data to be ensured and, more generally, to use and operate it in the      #
#  same conditions as regards security.                                      #
#                                                                            #
#  The fact that you are presently reading this means that you have had      #
#  knowledge of the CeCILL-C license and that you accept its terms.          #
#                                                                            #
##############################################################################
"""
Usage: clara [-d | -dd] [options] <plugin> [<args>...]
       clara help <plugin>
       clara [--version]
       clara [--help]

Options:
    -d                 Enable debug output
    -dd                Enable debug output for third party applications
    --config=<file>    Provide a configuration file

Clara provides the following plugins:
   repo     Creates, updates and synchronizes local Debian repositories.
   ipmi     Manages and get the status from the nodes of a cluster.
   slurm    Performs tasks using SLURM's controller.
   images   Creates and updates the images of installation of a cluster.
   chroot   Creates and updates a chroot.
   p2p      Makes torrent images and seeds them via BitTorrent.
   enc      Interact with encrypted files using configurable methods.
   build    Builds Debian packages.
   virt     Manages virtual machines.
   show     Show configuration dump.

See 'clara help <plugin>' for detailed help on a plugin
and 'clara <plugin> --help' for a quick list of options of a plugin.
"""
import os
import sys

import docopt
import importlib
import subprocess

from clara.version import __version__
from clara.utils import clara_exit, conf, initialize_logger

if __name__ == '__main__':

    try:
        args = docopt.docopt(__doc__, version=__version__, options_first=True)

        # if you are not root, launch the script with sudo
        if os.geteuid() != 0:
            os.execvp("sudo", ["sudo"] + sys.argv)

        if args['-d'] > 0:
            conf.debug = True

        if args['-d'] == 2:
            conf.ddebug = True

        initialize_logger(conf.debug)

        if args['--config']:
            if os.path.isfile(args['--config']):
                conf.config = os.path.abspath(args['--config'])
            else:
                clara_exit("'{0}' is not a file!".format(args['--config']))

        # If we just type 'clara' we get the short help
        if args['<plugin>'] is None:
            sys.exit(__doc__)

        # When we type 'clara help' docopt thinks it's a plugin
        if args['<plugin>'] == 'help':
            if len(args['<args>']) == 0:
                subprocess.call(['man', 'clara'])
            else:
                page = "clara-{0}".format(args['<args>'][0])
                subprocess.call(['man', page])

            sys.exit()

       # Finally we check if it's a clara plugin or show an error message
        try:
            m = importlib.import_module('clara.plugins.clara_' + args['<plugin>'])
        except ImportError:
            clara_exit("Sorry, the plugin {0} doesn't exist. "
                     "See 'clara --help'.".format(args['<plugin>']))

        # We remove all the "[options]" since the plugins won't know them
        rarg = []
        rarg.append(sys.argv[0])
        for e in range(1, len(sys.argv)):
            if sys.argv[e] == args['<plugin>']:
                break
        rarg = rarg + sys.argv[e:]
        sys.argv = rarg
        m.main()
    except KeyboardInterrupt:
        try:
            nb= raw_input("Clara was interrupted, would you like to exit ? Y(yes)/N(no)  ")
            if nb=='N' or nb=='no':
                m.main()
            else:
                sys.exit(0)
        except KeyboardInterrupt:
            print("Clara will exit now !")
